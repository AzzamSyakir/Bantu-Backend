services:
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      retries: 20
  app-services:
    container_name: app-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/Dockerfile
    environment:
      USER_HOST: user-services
      TRANSACTION_HOST: transaction-services
      REVIEW_HOST: review-services
      CHAT_HOST: chat-notification-services
      JOB_HOST: job-services
    ports:
      - ${GATEWAY_PORT}:8080
    volumes:
      - ../src/:/src/
  app-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: app-db
    restart: always
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./db/postgres/:/docker-entrypoint-initdb.d
      - app-db:/var/lib/postgresql/data

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    restart: unless-stopped
    ports:
      - ${SWAGGER_PORT}:8090
    depends_on:
      - app-services
    volumes:
      - ../docs/api/swagger.json:/spec/docs/swagger.json
    environment:
      SWAGGER_JSON: /spec/docs/swagger.json

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf #if need to setting up redis
volumes:
  redis-data:
  app-db:
  rabbitmq-data:
