services:
  #Services Container
  gateway-services:
    container_name: gateway-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/gateway-service/Dockerfile
    environment:
      USER_HOST: user-services
      TRANSACTION_HOST: transaction-services
      REVIEW_HOST: review-services
      CHAT_HOST: chat-notification-services
      JOB_HOST: job-services
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
      - ${GATEWAY_GRPC_PORT}:${GATEWAY_GRPC_PORT}
    volumes:
      - ../src/gateway-service/:/app/src/gateway-service/

  user-services:
    container_name: user-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/user-service/Dockerfile
    environment:
      POSTGRES_HOST: user-db
      GATEWAY_HOST: gateway-services
    ports:
      - ${USER_PORT}:${USER_PORT}
    depends_on:
      - user-db
    volumes:
      - ../src/user-service/:/app/src/user-service/

  transaction-services:
    container_name: transaction-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/transaction-service/Dockerfile
    environment:
      POSTGRES_HOST: transaction-db
    ports:
      - ${TRANSACTION_PORT}:${TRANSACTION_PORT}
    depends_on:
      - transaction-db
    volumes:
      - ../src/transaction-service/:/app/src/transaction-service/

  review-services:
    container_name: review-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/review-service/Dockerfile
    environment:
      POSTGRES_HOST: review-db
      USER_HOST: user-services
      TRANSACTION_HOST: transaction-services
    ports:
      - ${REVIEW_PORT}:${REVIEW_PORT}
    depends_on:
      - review-db
    volumes:
      - ../src/review-service/:/app/src/review-service/

  chat-notification-services:
    container_name: chat-notification-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/chat-notification-service/Dockerfile
    environment:
      POSTGRES_HOST: chat-notification-db
      USER_HOST: user-services
      TRANSACTION_HOST: transaction-services
    ports:
      - ${CHAT_NOTIFICATION_PORT}:${CHAT_NOTIFICATION_PORT}
    depends_on:
      - chat-notification-db
    volumes:
      - ../src/chat-notification-service/:/app/src/chat-notification-service/

  job-services:
    container_name: job-services
    restart: always
    build:
      context: ../
      dockerfile: ./src/job-service/Dockerfile
    environment:
      POSTGRES_HOST: job-db
      USER_HOST: user-services
      TRANSACTION_HOST: transaction-services
    ports:
      - ${JOB_PORT}:${JOB_PORT}
    depends_on:
      - job-db
    volumes:
      - ../src/job-service/:/app/src/job-service/

  # Database Container
  user-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: user-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: user_db
      PGPORT: ${POSTGRES_USER_PORT}
    expose:
      - 5430
    ports:
      - ${POSTGRES_USER_PORT}:${POSTGRES_USER_PORT}
    volumes:
      - ../db/postgres/user_db/migration:/docker-entrypoint-initdb.d
      - user-db:/var/lib/postgresql/data

  transaction-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: transaction-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: transaction_db
      PGPORT: ${POSTGRES_TRANSACTION_PORT}
    expose:
      - 5431
    ports:
      - ${POSTGRES_TRANSACTION_PORT}:${POSTGRES_TRANSACTION_PORT}
    volumes:
      - ../db/postgres/transaction_db/migration:/docker-entrypoint-initdb.d
      - transaction-db:/var/lib/postgresql/data

  review-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: review-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: review_db
      PGPORT: ${POSTGRES_REVIEW_PORT}
    ports:
      - ${POSTGRES_REVIEW_PORT}:${POSTGRES_REVIEW_PORT}
    volumes:
      - ../db/postgres/review_db/migration:/docker-entrypoint-initdb.d
      - review-db:/var/lib/postgresql/data

  chat-notification-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: chat-notification-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: chat_db
      PGPORT: ${POSTGRES_CHAT_NOTIFICATION_PORT}
    ports:
      - ${POSTGRES_CHAT_NOTIFICATION_PORT}:${POSTGRES_CHAT_NOTIFICATION_PORT}
    volumes:
      - ../db/postgres/chat_db/migration:/docker-entrypoint-initdb.d
      - chat-notification-db:/var/lib/postgresql/data

  job-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: job-db
    restart: always
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: job_db
      PGPORT: ${POSTGRES_JOB_PORT}
    ports:
      - ${POSTGRES_JOB_PORT}:${POSTGRES_JOB_PORT}
    volumes:
      - ../db/postgres/job_db/migration:/docker-entrypoint-initdb.d
      - job-db:/var/lib/postgresql/data

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    restart: unless-stopped
    ports:
      - ${SWAGGER_PORT}:8080
    depends_on:
      - gateway-services
    volumes:
      - ../docs/api/swagger.json:/spec/docs/swagger.json
    environment:
      SWAGGER_JSON: /spec/docs/swagger.json

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf #if need to setting up redis
volumes:
  redis-data:
  gateway-db:
  user-db:
  transaction-db:
  review-db:
  chat-notification-db:
  job-db:
