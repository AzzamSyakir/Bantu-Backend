services:
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      retries: 20
  app:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    container_name: app-container
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_MANAGEMENT_PORT: 15672
    depends_on:
      rabbitmq:
        condition: service_healthy
    entrypoint: [
        "sh",
        "-c",
        "until wget -q --spider --user ${RABBITMQ_USER} --password ${RABBITMQ_PASSWORD} http://rabbitmq:${RABBITMQ_MANAGEMENT_PORT}/api/aliveness-test/%2F; do echo 'Waiting for RabbitMQ...'; sleep 2; done; echo 'RabbitMQ is ready!';
        air",
      ]
  app-db:
    image: postgres:latest
    command: -c 'max_connections=500'
    container_name: app-db
    restart: always
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./db/postgres/migration:/docker-entrypoint-initdb.d
      - ./db/postgres/data:/docker-entrypoint-initdb.d/data
      - app-db:/var/lib/postgresql/data

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    restart: unless-stopped
    ports:
      - ${SWAGGER_PORT}:8080
    depends_on:
      - app
    volumes:
      - ../docs/api/swagger.json:/spec/docs/swagger.json
    environment:
      SWAGGER_JSON: /spec/docs/swagger.json

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf #if need to setting up redis
volumes:
  redis-data:
  app-db:
  rabbitmq-data:
